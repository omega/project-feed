#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;
use Project::Feed::Bot::Script;

Project::Feed::Bot::Script->new_with_options->run;


=pod
use AnyEvent;
use AnyEvent::IRC::Client;
use AnyEvent::XMPP;
use AnyEvent::Feed;


# XXX: This should be from some config file, just cant be arsed atm

my $config = {
    irc => {
        server => 'sausage.startsiden.no',
        channel => '#plagger-test',
        options => {
            nick => 'jandice',
        }
    },
    feed => {
        url => 'http://localhost:5000/',
        interval => 30,
    },
};

# XXX: I hate the global variables, need to figure that stuff out later.
#      Perhaps have a look at the plack anyevent stuff for inspiration

my $c = AnyEvent->condvar;

# Now lets set up everything :p

my $irc = new AnyEvent::IRC::Client;
$irc->reg_cb (connect => sub {
  my ($self, $err) = @_;
  if (defined $err) {
     warn "connect error: $err\n";
     return;
  }
});

$irc->reg_cb (registered => sub { print "I'm in!\n"; });
$irc->reg_cb (disconnect => sub { print "I'm out!\n"; $c->broadcast });



$irc->connect ($config->{irc}->{server}, $config->{irc}->{port} || 6667, $config->{irc}->{options});

$irc->send_srv( "JOIN", $config->{irc}->{channel});
$irc->send_chan( $config->{irc}->{channel}, "PRIVMSG", $config->{irc}->{channel}, "Hey, I'm Jandice, your project janitor");



###
#
# FeedReader setup

my $feed_reader = AnyEvent::Feed->new (
    url      => $config->{feed}->{url},
    interval => $config->{feed}->{interval},

    on_fetch => sub {
        my ($feed_reader, $new_entries, $feed, $error) = @_;

        if (defined $error) {
            warn "ERROR: $error\n";
            return;
        }

        for (reverse @$new_entries) { # We want oldest first
            my ($hash, $entry) = @$_;
            # Should here send a message
            $irc->send_chan( 
                $config->{irc}->{channel}, 
                "PRIVMSG", 
                $config->{irc}->{channel}, 
                $entry->title
            );
        }
        
    },
);


$c->wait; # Starts the event loop

$irc->disconnect;

